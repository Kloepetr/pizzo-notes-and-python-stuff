{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Kloepetr/pizzo-notes-and-python-stuff/blob/main/chapter%206%20python%20(not%20done)\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cR-bK631rPPZ"
      },
      "source": [
        "# DICTIONARIES\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "F6vRuoPHrPPf"
      },
      "source": [
        "### A Simple Dictionary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "V7eXh6N6rPPg",
        "outputId": "fc726548-7382-4a83-fd5e-856d63d148d1"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "green\n",
            "5\n"
          ]
        }
      ],
      "source": [
        "# simple, wrapped in curly braces\n",
        "alien_0 = {'color':'green','points':5}\n",
        "print(alien_0['color'])\n",
        "print(alien_0['points'])\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bPpA7JRarPPj"
      },
      "source": [
        "### Working with Dictionaries\n",
        "---\n",
        "- Accessing Values in a Dictionary\n",
        "- Adding New Key-Value Pairs\n",
        "- Starting with an Empty Dictionary\n",
        "- Modifying Values in a Dictionary\n",
        "- Removing Key-Value Pairs\n",
        "- A Dictionary of Similar Objects\n",
        "- Using `get()` to Access Values"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "UZxopFa3rPPk",
        "outputId": "1bd713bd-3efb-42f4-e0e0-4a6473a267b0"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            " you just earned 5 points\n"
          ]
        }
      ],
      "source": [
        "# Accessing Values in a Dictionary\n",
        "points = alien_0[\"points\"]\n",
        "print(f' you just earned {points} points')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "l9_RjKV7rPPl",
        "outputId": "2174525e-a7d7-4642-9315-7a875a42c595"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "{'color': 'green', 'points': 5}\n",
            "{'color': 'green', 'points': 5, 'x': 0, 'y': 25}\n"
          ]
        }
      ],
      "source": [
        "# Adding New Key-Value Pairs\n",
        "print(alien_0)\n",
        "alien_0['x'] = 0\n",
        "alien_0['y'] = 25\n",
        "print(alien_0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "CopfTqRIrPPm",
        "outputId": "ed3b60b7-1856-4e87-a951-6f700dfe7087"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "{'color': 'green', 'points': 5, 'x': 0, 'y': 25}\n",
            "{'color': 'green', 'points': 5, 'x': 0, 'y': 25}\n"
          ]
        }
      ],
      "source": [
        "# Starting with an Empty Dictionary'\n",
        "print(alien_0)\n",
        "alien_0['color'] = 'green'\n",
        "alien_0['points'] = 5\n",
        "print(alien_0)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rhd1wrAsrPPm",
        "outputId": "7504c61f-3ad1-4efe-b069-c9e35c5472bc"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "The alien is green.\n",
            "The alien is now yellow.\n",
            "Original position: 0\n"
          ]
        }
      ],
      "source": [
        "# Modifying Values in a Dictionary\n",
        "lien_0 = {'color': 'green'}\n",
        "print(f\"The alien is {alien_0['color']}.\")\n",
        "alien_0['color'] = 'yellow'\n",
        "print(f\"The alien is now {alien_0['color']}.\")\n",
        "alien_0 = {'x_position': 0, 'y_position': 25, 'speed': 'medium'}\n",
        "print(f\"Original position: {alien_0['x_position']}\")\n",
        "if alien_0['speed'] == 'slow':\n",
        "    x_increment = 1\n",
        "elif alien_0['speed'] == 'medium':\n",
        "    x_increment = 2\n",
        "else:\n",
        "        x_increment = 3"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dKzWCiCNrPPn"
      },
      "outputs": [],
      "source": [
        "# Removing Key-Value Pairs\n",
        "alien_0 = {'color': 'green', 'points': 5}\n",
        "print(alien_0)\n",
        "del alien_0['points']\n",
        "print(alien_0)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "uEhHjpTFrPPo",
        "outputId": "9f31f792-efdb-482b-fdc9-56e0a94538e5"
      },
      "outputs": [
        {
          "ename": "AttributeError",
          "evalue": "'list' object has no attribute 'title'",
          "output_type": "error",
          "traceback": [
            "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
            "\u001b[1;32mc:\\Users\\wangxia4\\Downloads\\PCCC6.ipynb Cell 10\u001b[0m in \u001b[0;36m<cell line: 10>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=0'>1</a>\u001b[0m \u001b[39m# A Dictionary of Similar Objects\u001b[39;00m\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=1'>2</a>\u001b[0m fav_lang \u001b[39m=\u001b[39m {\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=2'>3</a>\u001b[0m     \u001b[39m'\u001b[39m\u001b[39mjen\u001b[39m\u001b[39m'\u001b[39m : \u001b[39m'\u001b[39m\u001b[39mpython\u001b[39m\u001b[39m'\u001b[39m,\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=3'>4</a>\u001b[0m     \u001b[39m'\u001b[39m\u001b[39mhazel\u001b[39m\u001b[39m'\u001b[39m : \u001b[39m'\u001b[39m\u001b[39mc\u001b[39m\u001b[39m'\u001b[39m,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=7'>8</a>\u001b[0m \n\u001b[0;32m      <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=8'>9</a>\u001b[0m }\n\u001b[1;32m---> <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=9'>10</a>\u001b[0m language \u001b[39m=\u001b[39m fav_lang([\u001b[39m'\u001b[39;49m\u001b[39mleo\u001b[39;49m\u001b[39m'\u001b[39;49m]\u001b[39m.\u001b[39;49mtitle())\n\u001b[0;32m     <a href='vscode-notebook-cell:/c%3A/Users/wangxia4/Downloads/PCCC6.ipynb#X12sZmlsZQ%3D%3D?line=10'>11</a>\u001b[0m \u001b[39mprint\u001b[39m(\u001b[39mf\u001b[39m\u001b[39m\"\u001b[39m\u001b[39mleo\u001b[39m\u001b[39m'\u001b[39m\u001b[39ms favorite language is (language)\u001b[39m\u001b[39m\"\u001b[39m)\n",
            "\u001b[1;31mAttributeError\u001b[0m: 'list' object has no attribute 'title'"
          ]
        }
      ],
      "source": [
        "# A Dictionary of Similar Objects\n",
        "from multiprocessing.managers import ValueProxy\n",
        "\n",
        "\n",
        "fav_lang = {\n",
        "    'jen' : 'python',\n",
        "    'hazel' : 'c',\n",
        "    'kenan' : 'rust',\n",
        "    'cam' : 'javascript',\n",
        "    'matt' : 'c#'\n",
        "\n",
        "}\n",
        "#language = fav_lang(['leo'].title())\n",
        "#print(f\"leo's favorite language is (language)\")\n",
        "key : username\n",
        "value:kettekie0\n",
        "key: Value\n",
        "value "
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FZzPn0afrPPp"
      },
      "outputs": [],
      "source": [
        "# Using get() to Access Values\n",
        "alien_0 = {'color': 'green', 'speed': 'slow'}\n",
        "print(alien_0['points'])\n",
        "point_value = alien_0.get('points', 'No point value assigned.')\n",
        "print(point_value)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jR6QIMSGrPPp"
      },
      "source": [
        "### TRY IT YOURSELF\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_xYP7p0-rPPq"
      },
      "source": [
        "**6-1. Person:**   \n",
        "Use a dictionary to store information about a person you know. Store their first name, last name, age, and the city in which they live. You should have keys such as `first_name`, `last_name`, `age`, and `city`. Print each piece of information stored in your dictionary."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "bRiE31f-rPPq"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bMnvXU0lrPPr"
      },
      "source": [
        "**6-2. Favorite Numbers:**   \n",
        "Use a dictionary to store peopleâ€™s favorite numbers. Think of five names, and use them as keys in your dictionary. Think of a favorite number for each person, and store each as a value in your dictionary. Print each personâ€™s name and their favorite number. For even more fun, poll a few friends and get some actual data for your program."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rNisLb7brPPs"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_rKcSrB0rPPs"
      },
      "source": [
        "**6-3. Glossary:**    \n",
        "A Python dictionary can be used to model an actual dictionary.\n",
        "However, to avoid confusion, letâ€™s call it a glossary.\n",
        "- Think of five programming words youâ€™ve learned about in the previous chapters. Use these words as the keys in your glossary, and store their meanings as values.\n",
        "- Print each word and its meaning as neatly formatted output. You might print the word followed by a colon and then its meaning, or print the word on one line and then print its meaning indented on a second line. Use the newline character (`\\n`) to insert a blank line between each word-meaning pair in your output."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FLYEURJjrPPt"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0965UWZWrPPu"
      },
      "source": [
        "# Looping Through a Dictionary\n",
        "---\n",
        "- Looping Through All Key-Value Pairs\n",
        "- Looping Through All the Keys in a Dictionary\n",
        "- Looping Through a Dictionaryâ€™s Keys in a Particular Order\n",
        "- Looping Through All Values in a Dictionary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aNGD7opMrPPu"
      },
      "outputs": [],
      "source": [
        "# Looping Through All Key-Value Pairs\n",
        "user_0 = {\n",
        "    'username': 'efermi',\n",
        "    'first': 'enrico',\n",
        "    'last': 'fermi',\n",
        "    }\n",
        "for key, value in user_0.items():\n",
        "print(f\"\\nKey: {key}\")\n",
        "print(f\"Value: {value}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "uszytlT4rPPv"
      },
      "outputs": [],
      "source": [
        "# Looping Through All the Keys in a Dictionary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4NpxDmKcrPPv"
      },
      "outputs": [],
      "source": [
        "# Looping Through a Dictionaryâ€™s Keys in a Particular Order"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2ZvTbsnPrPPw"
      },
      "outputs": [],
      "source": [
        "# Looping Through All Values in a Dictionary"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ebzQJzmDrPPw"
      },
      "source": [
        "### TRY IT YOURSELF\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "z5s5C2fLrPPw"
      },
      "source": [
        "**6-4. Glossary 2:**    \n",
        "Now that you know how to loop through a dictionary, clean up the code from Exercise 6-3 by replacing your series of `print()` calls with a loop that runs through the dictionaryâ€™s keys and values. When youâ€™re sure that your loop works, add five more Python terms to your glossary. When you run your program again, these new words and meanings should automatically be included in the output."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QNuOTlNgrPPx"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "uctT0UcyrPPx"
      },
      "source": [
        "**6-5. Rivers:**    \n",
        "Make a dictionary containing three major rivers and the country each river runs through. One key-value pair might be `'nile': 'egypt'`.\n",
        "- Use a loop to print a sentence about each river, such as *The Nile runs through Egypt*.\n",
        "- Use a loop to print the name of each river included in the dictionary.\n",
        "- Use a loop to print the name of each country included in the dictionary."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "RVYo9zh6rPPy"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vyFi43DWrPPy"
      },
      "source": [
        "**6-6. Polling:**    \n",
        "Use the code in favorite_languages.py.\n",
        "- Make a list of people who should take the favorite languages poll. Include some names that are already in the dictionary and some that are not.\n",
        "- Loop through the list of people who should take the poll. If they have already taken the poll, print a message thanking them for responding. If they have not yet taken the poll, print a message inviting them to take the poll."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aAaHPN3mrPPy"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6_QGcWZKrPPz"
      },
      "source": [
        "### Nesting\n",
        "---\n",
        "- A List of Dictionaries\n",
        "- A List in a Dictionary\n",
        "- A Dictionary in a Dictionary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hxTJYkEUrPPz"
      },
      "outputs": [],
      "source": [
        "# A List of Dictionaries"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Aw8nNRAMrPP0"
      },
      "outputs": [],
      "source": [
        "# A List in a Dictionary"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "za_jtYTKrPP0"
      },
      "outputs": [],
      "source": [
        "# A Dictionary in a Dictionary"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QE7MumFjrPP0"
      },
      "source": [
        "### TRY IT YOURSELF\n",
        "---"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tWqp0FjPrPP1"
      },
      "source": [
        "**6-7. People:** \n",
        "Start with the program you wrote for Exercise 6-1. Make two new dictionaries representing different people, and store all three dictionaries in a list called people. Loop through your list of people. As you loop through the list, print everything you know about each person."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Aqan1hXQrPP1"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zl-NGd7drPP2"
      },
      "source": [
        "**6-8. Pets:** \n",
        "Make several dictionaries, where each dictionary represents a different pet. In each dictionary, include the kind of animal and the ownerâ€™s name. Store these dictionaries in a list called pets. Next, loop through your list and as you do, print everything you know about each pet."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "9V29zzKIrPP2"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2l8kH6t-rPP2"
      },
      "source": [
        "**6-9. Favorite Places:**   \n",
        "Make a dictionary called `favorite_places`. Think of three names to use as keys in the dictionary, and store one to three favorite places for each person. To make this exercise a bit more interesting, ask some friends to name a few of their favorite places. Loop through the dictionary, and print each personâ€™s name and their favorite places."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DCzu4y51rPP3"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3cX5QSsTrPP3"
      },
      "source": [
        "**6-10. Favorite Numbers:**   \n",
        "Modify your program from Exercise 6-2 so each person can have more than one favorite number. Then print each personâ€™s name along with their favorite numbers."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "pdA2QhivrPP4"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "K0zf1xyDrPP4"
      },
      "source": [
        "**6-11. Cities:**   \n",
        "Make a dictionary called `cities`. Use the names of three cities as keys in your dictionary. Create a dictionary of information about each city and include the country that the city is in, its approximate population, and one fact about that city. The keys for each cityâ€™s dictionary should be something like country, population, and fact. Print the name of each city and all of the information you have stored about it."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "t4838QJ0rPP4"
      },
      "outputs": [],
      "source": [
        "# code"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3.10.7 64-bit",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.10.7"
    },
    "orig_nbformat": 4,
    "vscode": {
      "interpreter": {
        "hash": "5b3b392c3fb1a3deb7c7f6a879d079f944f0677037344a86b977047a96536486"
      }
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}